=============================================================================================
v 3.0.0 Sun 02 Jan 2022 07:38:47 AEDT

Changes that are _NOT_ backward compatible:

1. Reversed the way newer-than/older-than works with reference objects. This flips how both
   the '-A' and '-M' command line arguments work for reference objectes '-objectpath' and
   'objectpath'. This is to be consistent with (new) other absolute reference target time
   (eg, '-a'/'-m' -YYYYMMDD_HHMMSS[.ns]'). Note: findfiles worked this way originally, but
   it was changed a long time ago so -A/-M and -a/-m followed by -reference (with a minus
   sign) both selected objects newer (accessed or modified AFTER) reference. Now it works
   like this:
    -m   -3D: display objects modified LESS THAN (or exactly) 3 days ago
    -m [+]3D: display objects modified MORE THAN (or exactly) 3 days ago
    -m   -20101231_000000: display objects modified BEFORE (or exactly) this time
    -m [+]20101231_000000: display objects modified AFTER  (or exactly) this time
    -M   -reference: display objects modified BEFORE the reference object
    -M [+]reference: display objects modified AFTER  the reference object
   So wherever -A/-M were used, '-reference' must be changed to '[+]reference', and vice-versa.

2. Changed --acc-age(-a) to --acc-info(-a) and --mod-age(-m) to --mod-info(-m).

3. Changed the way symbolic links are handled:
    a) Treat [.../]symlink vs [.../]symlink/ like (most) other *nix commands
       Note: this breaks backward compatibility.
    b) Added the (-L/--symlinks) option to always follow them

4. Changed the format that FF_STARTTIME requires. Before this release it was s[.ns] since the
   Epoch using UTC. Now it requires YYYYMMDD_HHMMSS[.ns], and it respects the timezone (eg,
   TZ). Note: this breaks backward compatibility, but this feature is only meant for testing.

Changes that ARE backward compatible:

A. Before this version, access (-a) and modification (-m) times were only set relatively (to
   the starttime), eg, '10D' or '-30s'. These command line aguments must end in one of the
   legal time unit characters. Now -a and -m times can be set absolutely as well, eg,
   '20220630_121500[.ns]'. These must end in a digit.

B. Allow all of the FF_* environment variables to be set on the command line with
   -V FF_name=value.

C. Changed the usage message to use a printf call for each line (to avoid compiler warnings).

=============================================================================================
v2.2.1 Tue 19 Oct 2021 15:52:32 AEDT

display_usage_messge used to use one very long string. This caused gcc warning messages - 
most commonly observed on OpenSuSE and SLES. Now this function uses a table of text messages.
There is no change in functionality from v2.2.0.

=============================================================================================
v2.2.0 Sun 17 Oct 2021 17:37:53 AEDT

1. In addition to the original 'age' target times relative to the start time (eg, -3D),
   absolute 'timestamp' values can now be specified (eg, YYYYMMDD_HHMMSS[.fraction_of_a_second])
   on the command line - for both -a and -m. Environment variable FF_TIMESTAMPFORMAT (default
   '%Y%m%d_%H%M%S' can be used to configure different accepted timestamp formats. If the last
   two characters of the accepted timestamp format are '%S' (seconds), command line timestamps
   may specify fractions of a second (eg, 20201231_010203.25)

2. As a result, changed long argments for (-a) --acc-age to --acc-info and for
   (-m) --mod-age to --mod-info.

3. Because timezones have mysteriously disappeared from the output for some locales,
   the date/time output format can now be configured with new environment variable
   FF_INFODATETIMEFORMAT.

4. Reformatted the info "i: ..." FF_... environment variable output to be prettier.

5. Removed the docs directory containing html files describing findfiles in more detail.
   See: https://yosj.com.au/staff/c_programs/findfiles

=============================================================================================
v2.1.2 - Fri Oct 11 17:54:14 AEST 2019

Got sick of the source looking different in vi(m) than cat/less. Changed the indentation  back
to a tabstop of 8 characters. The only differences are indenting and other whitespace.

=============================================================================================
v2.1.1 - Fri May  3 09:55:38 AEST 2019

1. Change the object table size of initial allocation (4k->8k) and then doubling that size
   every time the number must be increased, but only up to 512k, then adding 64k each time
   after that.

2. Also, added two test shell scripts:
   a. Reference test: findfiles_reference_test.sh - generates output to be compared with the
      the expected/required output.
   b. Regression test: findfiles_regression_test.sh - compare output generated by two versions
      of findfiles (presumably the existing version and the new version).

=============================================================================================
v2.1.0 - Mon Oct  8 06:30:17 AEDT 2018

1. Added the -D/--depth option: specify the maximum depth of recursive file system traversal(s)

2. Changed the --nano option to --nanoseconds

3. Changed the tab width from 8 to 4 characters (or, as some would have it, redfined pi as 3)

=============================================================================================
v2.0.1 - Wed Mar 28 12:27:09 AEDT 2018

1. Corrected USAGEMESSAGE "-vfn -1M /tmp" to "-vfn -m -1M /tmp" & the spelling of modified.

2. Flipped CHANGE_LOG (this file) to have the most recent entries at the top.

3. Added docs directory (and html files and usage messages) for github pages

=============================================================================================
v2.0.0 - Wed Mar 14 09:53:49 AEDT 2018

The first release with 'nanosecond' resolution!

Performing timestamp comparisons where the two things being compared (e.g., a the start time
and an object's modification time) is more convoluted when each has two timestamp values (i.e.,
s and ns) to be compared. It would have been much simpler to combine the two in the obvious way:
    nanoseconds_since_the_epoch = 1000000000*timestamp_s + timestame_ns
and then just subtract these two "combined" (s/ns) values. However, doing this would have caused
some other issues. Hence, the comparison of both s and ns timestamps.

1. Added 'nanosecond' resolution - or whatever the OS (file system) offers.

   Note: this can produce output with a slightly different order than findfiles versions <2.0.0,
   but only for objects that have the same timestamp value for second.

2. Added 3 new environment variables:
    FF_STARTTIME to aid with testing and debugging
    FF_DATETIMEFORMAT to configure the date/timestamp output
    FF_AGEFORMAT to configure the age output

3. Display extra information at new verbosity levels 3 and 4 - mainly for testing and debugging.

4. Store only objects' timestamp (but now in both s and ns) - no longer store its 'age'.

5. Rename starttime to startime_s and add starttime_ns - and make them both global variables.
   Do the same for targettime, targettime_s and targettime_ns.
   (So targettime* and starttime* are no longer passed as function arguments.)

=============================================================================================
v1.0.2 - Fri Tue Dec 12 08:10:59 AEDT 2017
1. perror doesn't work after regcomp! Who knew?!? Call regerror & exit after a regcomp error.

=============================================================================================
v1.0.1 - Fri Apr 21 10:22:28 AEST 2017
1. "verbose" was erroneously changed to "verbosity" in the usage message - changed it back.

=============================================================================================
v1.0.0 - Fri Apr  7 21:24:59 AEST 2017

1. a target of / no longer produces // (double slash) output

2. Produce a suitable warning if no targets are specified with verbosity > 1.

3. Changed verbose to verbosity in the usage message.

=============================================================================================
v0.0.3 Sun May 15 21:30:33 AEST 2016

1. Added variables to compare_object_info & a cast to qsort to get a clean compile with this:
   gcc -pedantic -Wextra -Wshadow -Wpointer-arith -Wcast-qual -o findfiles findfiles.c

2. Updated and standardized the usage message (foo, not <foo>), fixed a spelling mistake

=============================================================================================
v0.0.2 - Forgot to record the date.

Changes that are _NOT_ backward compatible:

1.  The meaning of "-" (minus sign vs plus sign or equivalently, no minus sign) is reversed
    when specifying an age value with the "-A" and "-M" options. (So now "-" means the same
    as it does for "-a" and "-m".)

2. "Y" Year(s) and "M" Month(s) are calculated correctly (not 365D and 30D, as they were before)

3. Daylight Savings time is handled correctly (if one can say such a thing for discontinuous time!).

Changes that ARE backward compatible:

1.  --long_options now require only the minimum number of characters to be unique (like getopt_long).

2.  process_object now uses timestamp (Epoch) times, not ages.

3.  Cosmetic changes such as better indenting and renaming variables and functions.

=============================================================================================
v0.0.1 - Initial FOSS version
